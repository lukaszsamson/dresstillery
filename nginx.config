##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
    listen 80;
    listen [::]:80;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_protocols TLSv1.2 TLSv1.1;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers On;
    ssl_certificate /etc/letsencrypt/live/falda.pl/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/falda.pl/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/falda.pl/chain.pem;
    ssl_session_cache shared:SSL:128m;
    add_header Strict-Transport-Security "max-age=31557600; includeSubDomains";
    ssl_stapling on;
    ssl_stapling_verify on;
    # Your favorite resolver may be used instead of the Google one below
    resolver 8.8.8.8;

    root /opt/dresstillery/priv/static;

    server_name falda.pl www.falda.pl;

    location '/.well-known/acme-challenge' {
        root /opt/dresstillery/priv/static;
    }

    location ~ ^.+\..+$ { # files (assuming they always have a dot)
        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }
        try_files $uri =404;
    }

    location / { # url routed by client, client gives 404 for bad urls
        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }
        try_files $uri /index.html;
    }

    location /admin {
        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }
        proxy_pass http://localhost:4000;
    }
}
